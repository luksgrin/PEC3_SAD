"periods_with_vaccine" = BCG_no_strain_no_NA%>%
.[2:ncol(.)] %>% rowSums())
BCG_no_strain_simple$last_vaccine_year <- names(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)])[max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0, 'first')] %>%
substring(nchar(.)-3, nchar(.))
BCG_no_strain_simple$first_vaccine_year <- names(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)])[max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0, 'last')] %>%
substring(nchar(.)-3, nchar(.))
View(BCG_no_strain_simple)
BCG_no_strain_simple$first_vaccine_year <- names(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)])[max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0, 'last')] %>%
substring(nchar(.)-8, nchar(.)-5)
View(BCG_no_strain_simple)
# Elimino columnas que sean sólo NA
COVID_noNA <- COVID_noformat[, apply(!is.na(COVID_noformat), 2, all)]
# En este caso, para variar, los valores vacíos están denotados como NULL,
# cambio esto a NA
COVID_Na <- sapply(COVID_noNA, function(x)
gsub("NULL", NA, x))
# El resulatado de la función anterior es una string. Lo convierto a dataframe.
COVID_Na_df <- as.data.frame(COVID_Na)
# Modifico las fechas para que se almacenen como Date
COVID_Na_df[, c("date_fifth_death")] <-
as.Date(COVID_Na_df[, c("date_fifth_death")], "%d/%m/%y")
COVID_Na_df[, c("date_first_death")] <-
as.Date(COVID_Na_df[, c("date_first_death")], "%d/%m/%y")
# Modifico las muertes para que se almacenen como floats.
COVID_Na_df[, -c(1, 2, 3, 4)] <-
sapply(COVID_Na_df[, -c(1, 2, 3, 4)], as.numeric)
View(COVID_Na_df)
# Junto ambos dataframes en uno sólo.
COVID_BGC <-
left_join(BCG_no_strain_simple, COVID_Na_df, by = "country_name")
# Reduzco los colnames, son my largos
colnames(COVID_BGC) <-
gsub("mandatory_bcg_strain_", "strain", colnames(COVID_BGC)) %>%
gsub("deaths_per_million", "dpm", .) %>%
gsub("days_after_fifth_death", "d", .) %>%
gsub("stringency_index", "si", .)
View(COVID_BGC)
opts <- options(knitr.kable.NA = "")
for (i in seq(1, 61, by = 10)) {
print(
kable(
head(COVID_BGC[, c(1, (i + 1):(i + 10))]),
digits = 2,
caption = "Tabla 1. Vacunación de BCG por países y muertes por COVID-19",
format = "simple"
)
)
}
str(COVID_BGC)
COVID_Na_df2 <- data.frame("country_name" = COVID_Na_df$country_name,
"dpm_100d" = COVID_Na_df$deaths_per_million_100_days_after_fifth_death,
"si_100d" = COVID_Na_df$stringency_index_100_days_after_fifth_death)
# Junto ambos dataframes en uno sólo.
COVID_BGC <-
left_join(BCG_no_strain_simple, COVID_Na_df2, by = "country_name")
kable(head(COVID_BGC))
COVID_Na_df2 <- data.frame("country_name" = COVID_Na_df$country_name,
"dpm_100d" = COVID_Na_df$deaths_per_million_100_days_after_fifth_death,
"si_100d" = COVID_Na_df$stringency_index_100_days_after_fifth_death) %>%
na.omit()
# Junto ambos dataframes en uno sólo.
COVID_BGC <-
left_join(BCG_no_strain_simple, COVID_Na_df2, by = "country_name")
kable(head(COVID_BGC), digits = 2,
caption = "Tabla 1. Vacunación de BCG por países y muertes por COVID-19",
format = "simple")
str(COVID_BGC)
View(COVID_Na_df2)
# Junto ambos dataframes en uno sólo.
COVID_BGC <-
left_join(BCG_no_strain_simple, COVID_Na_df2, by = "country_name")
View(COVID_BGC)
# Junto ambos dataframes en uno sólo.
COVID_BGC <-
inner_join(BCG_no_strain_simple, COVID_Na_df2, by = "country_name")
View(COVID_BGC)
COVID_Na_df2 <- data.frame("country_name" = COVID_Na_df$country_name,
"dpm_100d" = COVID_Na_df$deaths_per_million_100_days_after_fifth_death,
"si_100d" = COVID_Na_df$stringency_index_100_days_after_fifth_death)
# Junto ambos dataframes en uno sólo.
COVID_BGC <-
inner_join(BCG_no_strain_simple, COVID_Na_df2, by = "country_name")
kable(head(COVID_BGC), digits = 2,
caption = "Tabla 1. Vacunación de BCG por países y muertes por COVID-19",
format = "simple")
View(COVID_BGC)
str(COVID_BGC)
m1 <- mean(na.omit(COVID_BGC$dpm_100_d))
m2 <- mean(na.omit(COVID_BGC$si_100_d))
cat(sprintf("La media para dpm_150_d es %.2f\n", m1))
cat(sprintf("La media para si_150_d es %.2f\n", m2))
m1 <- mean(na.omit(COVID_BGC$dpm_100d))
m2 <- mean(na.omit(COVID_BGC$si_100d))
cat(sprintf("La media para dpm_100d es %.2f\n", m1))
cat(sprintf("La media para si_100d es %.2f\n", m2))
cat(
"Los países cuyo valor de dpm_100d es menor que la media del dataset son:\n\n",
paste(subset(COVID_BGC, dpm_100d < m1)$country_name, collapse = ', '),
"\n\n"
)
cat(
"Los países cuyo valor de si_100d es menor que la media del dataset son:\n\n",
paste(subset(COVID_BGC, si_100d < m2)$country_name, collapse = ', ')
)
cat(
"Los países cuyos valores de dpm_100d y de si_100d son menores que la media del dataset son:\n\n",
paste(subset(COVID_BGC, (dpm_100d < m1) &
(si_100d < m2))$country_name, collapse = ', ')
)
m3 <- mean(na.omit(COVID_BGC$last_vaccine_year))
cat(
"Los países cuyos valores de dpm_100d son menores que la media del dataset y que además han tenido una reciente campaña de vacunación de la vacuna BCG son:\n\n",
paste(subset(
COVID_BGC, (dpm_100d < m1) &
(last_vaccine_year < m3)
)$country_name, collapse = ', ')
)
m3
COVID_BGC$last_vaccine_year
BCG_no_strain_simple$last_vaccine_year <- names(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)])[max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0, 'first')] %>%
substring(nchar(.)-3, nchar(.))%>%
as.numeric()
BCG_no_strain_simple$first_vaccine_year <- names(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)])[max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0, 'last')] %>%
substring(nchar(.)-8, nchar(.)-5)%>%
as.numeric()
# Junto ambos dataframes en uno sólo.
COVID_BGC <-
inner_join(BCG_no_strain_simple, COVID_Na_df2, by = "country_name")
kable(head(COVID_BGC), digits = 2,
caption = "Tabla 1. Vacunación de BCG por países y muertes por COVID-19",
format = "simple")
m3 <- mean(na.omit(COVID_BGC$last_vaccine_year))
cat(
"Los países cuyos valores de dpm_100d son menores que la media del dataset y que además han tenido una reciente campaña de vacunación de la vacuna BCG son:\n\n",
paste(subset(
COVID_BGC, (dpm_100d < m1) &
(last_vaccine_year < m3)
)$country_name, collapse = ', ')
)
m3
# Obvimente hay variables en las que no tiene sentido hacer resumen estadístico, como el alpha_3_code, las strains... Pero por ahora lo voy a dejar
summary(COVID_BGC)
# Igual habría que dibujar histogramas de tasas de muerte, y de vacunas puestas. No sé la verdad.
ggplot(COVID_BGC, aes(x= dpm_100d, fill = "b"))+geom_density()+
theme_bw()+theme(legend.position = 0, panel.grid = element_blank())+
ggtitle("Distribución de muertes por millón a los 100 días de la quinta muerte")
ggplot(COVID_BGC, aes(x= si_100d, fill = "b"))+geom_density()+
theme_bw()+theme(legend.position = 0, panel.grid = element_blank())+
ggtitle("Distribución del stringency index por millón a los 100 días de la quinta muerte")
ggplot(COVID_BGC, aes(x= periods_with_vaccine, fill = "b"))+geom_bar()+
theme_bw()+theme(legend.position = 0, panel.grid = element_blank())+
ggtitle("Presencia de una campaña de vacunación entre 2015 y 2020")
cormat <-
cor(COVID_BGC[2:nrow(COVID_BGC)] %>% na.omit())
cormat <-
cor(COVID_BGC[2:ncol(COVID_BGC)] %>% na.omit())
cormat <-
cor(COVID_BGC[2:ncol(COVID_BGC)])
cormat2 <- cormat
cormat2[upper.tri(cormat2)] <-
NA #Para visualizar solamente una vez las correlaciones
cormat2 <- melt(round(cormat2, 2)) #Formato para poder usar ggplot
ggplot(cormat2, aes(x = Var1, y = Var2, fill = value)) + geom_tile() + scale_fill_continuous(type = "viridis")
fig <-
plot_ly(
x = colnames(cormat),
y = colnames(cormat),
z = cormat,
type = "heatmap"
)
fig
cormat <-
cor(COVID_BGC[2:ncol(COVID_BGC)]%>%na.omit())
cormat2 <- cormat
cormat2[upper.tri(cormat2)] <-
NA #Para visualizar solamente una vez las correlaciones
cormat2 <- melt(round(cormat2, 2)) #Formato para poder usar ggplot
ggplot(cormat2, aes(x = Var1, y = Var2, fill = value)) + geom_tile() + scale_fill_continuous(type = "viridis")
fig <-
plot_ly(
x = colnames(cormat),
y = colnames(cormat),
z = cormat,
type = "heatmap"
)
fig
ggplot(COVID_BGC,
aes(x = dpm_100d, y = periods_with_vaccine, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = last_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = first_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = last_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = first_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
BCG_no_strain_simple <- data.frame(
"country_name" = BCG_no_strain_no_NA$country_name,
"periods_with_vaccine" = BCG_no_strain_no_NA%>%
.[2:ncol(.)] %>% rowSums(),
"vaccination_2020-2015" = BCG_no_strain_no_NA$`mandatory_bcg_strain_2015-2020`)
BCG_no_strain_simple$last_vaccine_year <- names(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)])[max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0, 'first')] %>%
substring(nchar(.)-3, nchar(.))%>%
as.numeric()
BCG_no_strain_simple$first_vaccine_year <- names(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)])[max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0, 'last')] %>%
substring(nchar(.)-8, nchar(.)-5)%>%
as.numeric()
# Junto ambos dataframes en uno sólo.
COVID_BGC <-
inner_join(BCG_no_strain_simple, COVID_Na_df2, by = "country_name")
kable(head(COVID_BGC), digits = 2,
caption = "Tabla 1. Vacunación de BCG por países y muertes por COVID-19",
format = "simple")
BCG_no_strain_simple <- data.frame(
"country_name" = BCG_no_strain_no_NA$country_name,
"periods_with_vaccine" = BCG_no_strain_no_NA%>%
.[2:ncol(.)] %>% rowSums(),
"vaccination_2020_2015" = BCG_no_strain_no_NA$`mandatory_bcg_strain_2015-2020`)
BCG_no_strain_simple$last_vaccine_year <- names(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)])[max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0, 'first')] %>%
substring(nchar(.)-3, nchar(.))%>%
as.numeric()
BCG_no_strain_simple$first_vaccine_year <- names(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)])[max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0, 'last')] %>%
substring(nchar(.)-8, nchar(.)-5)%>%
as.numeric()
# Junto ambos dataframes en uno sólo.
COVID_BGC <-
inner_join(BCG_no_strain_simple, COVID_Na_df2, by = "country_name")
ggplot(COVID_BGC,
aes(x = dpm_100d, y = vaccination_2020_2015, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = last_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = last_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = first_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = vaccination_2020_2015, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = last_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = first_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
View(COVID_Na)
View(COVID_Na_df)
View(BCG_strain)
View(BCG_no_strain_simple)
max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0, 'first')
max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0)
max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0, 'last')
View(BCG_no_strain_simple)
View(BCG_strain)
BCG_no_strain_simple[BCG_no_strain_simple$periods_with_vaccine == 0]
BCG_no_strain_simple[BCG_no_strain_simple$periods_with_vaccine == 0,]
BCG_no_strain_simple$periods_with_vaccine == 0
BCG_no_strain_simple[BCG_no_strain_simple$periods_with_vaccine == 0,]$last_vaccine_year = 0
View(BCG_no_strain_simple)
BCG_no_strain_simple[BCG_no_strain_simple$periods_with_vaccine == 0,]$last_vaccine_year = 0
BCG_no_strain_simple[BCG_no_strain_simple$periods_with_vaccine == 0,]$first_vaccine_year = 0
# Junto ambos dataframes en uno sólo.
COVID_BGC <-
inner_join(BCG_no_strain_simple, COVID_Na_df2, by = "country_name")
kable(head(COVID_BGC), digits = 2,
caption = "Tabla 1. Vacunación de BCG por países y muertes por COVID-19",
format = "simple")
str(COVID_BGC)
m1 <- mean(na.omit(COVID_BGC$dpm_100d))
m2 <- mean(na.omit(COVID_BGC$si_100d))
cat(sprintf("La media para dpm_100d es %.2f\n", m1))
cat(sprintf("La media para si_100d es %.2f\n", m2))
cat(
"Los países cuyo valor de dpm_100d es menor que la media del dataset son:\n\n",
paste(subset(COVID_BGC, dpm_100d < m1)$country_name, collapse = ', '),
"\n\n"
)
cat(
"Los países cuyo valor de si_100d es menor que la media del dataset son:\n\n",
paste(subset(COVID_BGC, si_100d < m2)$country_name, collapse = ', ')
)
cat(
"Los países cuyos valores de dpm_100d y de si_100d son menores que la media del dataset son:\n\n",
paste(subset(COVID_BGC, (dpm_100d < m1) &
(si_100d < m2))$country_name, collapse = ', ')
)
m3 <- mean(na.omit(COVID_BGC$last_vaccine_year))
cat(
"Los países cuyos valores de dpm_100d son menores que la media del dataset y que además han tenido una reciente campaña de vacunación de la vacuna BCG son:\n\n",
paste(subset(
COVID_BGC, (dpm_100d < m1) &
(last_vaccine_year < m3)
)$country_name, collapse = ', ')
)
m3
cat(
"Los países cuyos valores de dpm_100d son menores que la media del dataset y que además han tenido una reciente campaña de vacunación de la vacuna BCG son:\n\n",
paste(subset(
COVID_BGC, (dpm_100d < m1) &
(vaccination_2020_2015 == 1)
)$country_name, collapse = ', ')
)
# Obvimente hay variables en las que no tiene sentido hacer resumen estadístico, como el alpha_3_code, las strains... Pero por ahora lo voy a dejar
summary(COVID_BGC)
# Igual habría que dibujar histogramas de tasas de muerte, y de vacunas puestas. No sé la verdad.
ggplot(COVID_BGC, aes(x= dpm_100d, fill = "b"))+geom_density()+
theme_bw()+theme(legend.position = 0, panel.grid = element_blank())+
ggtitle("Distribución de muertes por millón a los 100 días de la quinta muerte")
ggplot(COVID_BGC, aes(x= si_100d, fill = "b"))+geom_density()+
theme_bw()+theme(legend.position = 0, panel.grid = element_blank())+
ggtitle("Distribución del stringency index por millón a los 100 días de la quinta muerte")
ggplot(COVID_BGC, aes(x= vaccination_2020_2015, fill = "b"))+geom_bar()+
theme_bw()+theme(legend.position = 0, panel.grid = element_blank())+
ggtitle("Presencia de una campaña de vacunación entre 2015 y 2020")
ggplot(COVID_BGC, aes(x= periods_with_vaccine, fill = "b"))+geom_bar()+
theme_bw()+theme(legend.position = 0, panel.grid = element_blank())+
ggtitle("Número de décadas o lustros con campaña de vacunación activa")
cormat <-
cor(COVID_BGC[2:ncol(COVID_BGC)]%>%na.omit())
cormat2 <- cormat
cormat2[upper.tri(cormat2)] <-
NA #Para visualizar solamente una vez las correlaciones
cormat2 <- melt(round(cormat2, 2)) #Formato para poder usar ggplot
ggplot(cormat2, aes(x = Var1, y = Var2, fill = value)) + geom_tile() + scale_fill_continuous(type = "viridis")
fig <-
plot_ly(
x = colnames(cormat),
y = colnames(cormat),
z = cormat,
type = "heatmap"
)
fig
ggplot(COVID_BGC,
aes(x = dpm_100d, y = vaccination_2020_2015, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = last_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = first_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
BCG_no_strain_simple[BCG_no_strain_simple$periods_with_vaccine == 0,]$last_vaccine_year = "None"
BCG_no_strain_simple[BCG_no_strain_simple$periods_with_vaccine == 0,]$first_vaccine_year = "None"
# Junto ambos dataframes en uno sólo.
COVID_BGC <-
inner_join(BCG_no_strain_simple, COVID_Na_df2, by = "country_name")
ggplot(COVID_BGC,
aes(x = dpm_100d, y = vaccination_2020_2015, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = last_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = first_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
BCG_no_strain_simple[BCG_no_strain_simple$periods_with_vaccine == 0,]$last_vaccine_year = 1950
BCG_no_strain_simple[BCG_no_strain_simple$periods_with_vaccine == 0,]$first_vaccine_year = 2020
# Junto ambos dataframes en uno sólo.
COVID_BGC <-
inner_join(BCG_no_strain_simple, COVID_Na_df2, by = "country_name")
ggplot(COVID_BGC,
aes(x = dpm_100d, y = vaccination_2020_2015, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = last_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = first_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
cormat2 <- cormat
cormat2[upper.tri(cormat2)] <-
NA #Para visualizar solamente una vez las correlaciones
cormat2 <- melt(round(cormat2, 2)) #Formato para poder usar ggplot
ggplot(cormat2, aes(x = Var1, y = Var2, fill = value)) + geom_tile() + scale_fill_continuous(type = "viridis")
fig <-
plot_ly(
x = colnames(cormat),
y = colnames(cormat),
z = cormat,
type = "heatmap"
)
fig
cormat <-
cor(COVID_BGC[2:ncol(COVID_BGC)]%>%na.omit())
BCG_no_strain_simple$last_vaccine_year <- names(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)])[max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0, 'first')] %>%
substring(nchar(.)-3, nchar(.))%>%
as.numeric()
BCG_no_strain_simple$first_vaccine_year <- names(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)])[max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0, 'last')] %>%
substring(nchar(.)-8, nchar(.)-5)%>%
as.numeric()
BCG_no_strain_simple[BCG_no_strain_simple$periods_with_vaccine == 0,]$last_vaccine_year = 1950
BCG_no_strain_simple[BCG_no_strain_simple$periods_with_vaccine == 0,]$first_vaccine_year = 2020
# Junto ambos dataframes en uno sólo.
COVID_BGC <-
inner_join(BCG_no_strain_simple, COVID_Na_df2, by = "country_name")
cormat <-
cor(COVID_BGC[2:ncol(COVID_BGC)]%>%na.omit())
cormat2 <- cormat
cormat2[upper.tri(cormat2)] <-
NA #Para visualizar solamente una vez las correlaciones
cormat2 <- melt(round(cormat2, 2)) #Formato para poder usar ggplot
ggplot(cormat2, aes(x = Var1, y = Var2, fill = value)) + geom_tile() + scale_fill_continuous(type = "viridis")
fig <-
plot_ly(
x = colnames(cormat),
y = colnames(cormat),
z = cormat,
type = "heatmap"
)
fig
ggplot(COVID_BGC,
aes(x = dpm_100d, y = vaccination_2020_2015, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = last_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
ggplot(COVID_BGC,
aes(x = dpm_100d, y = first_vaccine_year, label = country_name)) +
geom_jitter(position = position_jitter(seed = 1)) +
geom_label_repel(size = 2, position = position_jitter(seed = 1)) +
xlim(c(-100, 800))
model <- lm(dpm_100d ~ last_vaccine_year, COVID_BGC)
model <- lm(dpm_100d ~ last_vaccine_year, COVID_BGC)
summary(model)
model <- lm(COVID_BGC)
model <- lm(dpm_100d ~ ., COVID_BGC)
summary(model)
model <- lm(dpm_100d ~ vaccination_2020_2015, COVID_BGC)
summary(model)
model <- lm(dpm_100d ~ vaccination_2020_2015 + first_vaccine_year + last_vaccine_year, COVID_BGC)
summary(model)
model <- lm(dpm_100d ~ vaccination_2020_2015 + first_vaccine_year + last_vaccine_year, COVID_BGC)
summary(model)
plot(model)
#Añadimos el último año con vacunación
BCG_no_strain_simple$last_vaccine_year <- names(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)])[max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)],'first')] %>%
substring(nchar(.)-3, nchar(.))%>%
as.numeric()
View(BCG_no_strain_simple)
#Añadimos el último año con vacunación
BCG_no_strain_simple$last_vaccine_year <- names(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)])[max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0, 'first')] %>%
substring(nchar(.)-3, nchar(.))%>%
as.numeric()
#Añadimos el primer año con vacunación
BCG_no_strain_simple$first_vaccine_year <- names(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)])[max.col(BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0, 'last')] %>%
substring(nchar(.)-8, nchar(.)-5)%>%
as.numeric()
BCG_no_strain_no_NA[2:ncol(BCG_no_strain_no_NA)] != 0
View(COVID_BGC)
ggplot(COVID_BGC, aes(x=last_vaccine_year, fill = "b"))+geom_bar()+
theme_bw()+theme(legend.position = 0, panel.grid = element_blank())+
ggtitle("Último año con campaña de vacunación activa")
ggplot(COVID_BGC, aes(x=last_vaccine_year, fill = "b"))+geom_bar()+
theme_bw()+theme(legend.position = 0, panel.grid = element_blank())+
ggtitle("Último año con campaña de vacunación activa")
ggplot(COVID_BGC, aes(x=first_vaccine_year, fill = "b"))+geom_bar()+
theme_bw()+theme(legend.position = 0, panel.grid = element_blank())+
ggtitle("Primer año con campaña de vacunación activa")
